<?xml version="1.0"?>
<doc>
<assembly>
<name>
CTCBASE
</name>
</assembly>
<members>
<member name="P:CTCBASE.cBarraMenus.ColorInicial">
	<summary>
 Color inicial del degradado de la barra de menús
 </summary>
	<value>System.Drawing.Color</value>
	<returns>System.Drawing.Color</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.cBarraMenus.ColorFinal">
	<summary>
 Color final del degradado de la barra de menús
 </summary>
	<value>System.Drawing.Color</value>
	<returns>System.Drawing.Color</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.cBarraMenus.AnguloDeg">
	<summary>
 Angulo de la linea de degradado
 </summary>
	<value>Single</value>
	<returns>Single</returns>
	<remarks></remarks>
</member><member name="E:CTCBASE.BarraProgresoContinuo.OnCuandoValorCambia">
	<summary>
 Evento que ocurre cuando el valor cambia
 </summary>
	<remarks></remarks>
</member><member name="E:CTCBASE.BarraProgresoContinuo.OnCuandoValorAlcanzaMaximo">
	<summary>
 Evento que ocurre cuando el valor alcanza el máximo indicado en la barra de progreso
 </summary>
	<remarks></remarks>
</member><member name="E:CTCBASE.BarraProgresoContinuo.OnCuandoValorAlcanzaMinimo">
	<summary>
 Evento que ocurre cuando el valor alcanza el mínimo indicado en la barra de progreso
 </summary>
	<remarks></remarks>
</member><member name="P:CTCBASE.BarraProgresoContinuo.DibujarHorizontal">
	<summary>
 Permite que el control se dibuje de manera horizontal o vertical
 </summary>
	<value>boolean</value>
	<returns>boolean</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.BarraProgresoContinuo.DibujarDegradadoProgresivo">
	<summary>
 Permite que el control dibuje los colores o progresivamente o como un rectangulo de longitud variable
 </summary>
	<value>boolean</value>
	<returns>boolean</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.BarraProgresoContinuo.DibujarBorde">
	<summary>
 Permite al control dibujar el borde de dicho control
 </summary>
	<value>boolean</value>
	<returns>boolean</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.BarraProgresoContinuo.ColorMinimo">
	<summary>
 Color del mínimo de la barra de progreso
 </summary>
	<value>System.Drawing.Color</value>
	<returns>System.Drawing.Color</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.BarraProgresoContinuo.ValorMinimo">
	<summary>
 Valor mínimo que se representará en la barra de progreso
 </summary>
	<value>Double</value>
	<returns>Double</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.BarraProgresoContinuo.ColorMaximo">
	<summary>
 Color del máximo de la barra de progreso
 </summary>
	<value>System.Drawing.Color</value>
	<returns>System.Drawing.Color</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.BarraProgresoContinuo.ValorMaximo">
	<summary>
 Valor máximo que se representará en la barra de progreso
 </summary>
	<value>Double</value>
	<returns>Double</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.BarraProgresoContinuo.Valor">
	<summary>
 Valor actual representado en la barra de progreso
 </summary>
	<value>Double</value>
	<returns>Double</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.cBarraHerramientas.color_inicial">
	<summary>
 Color inicial del degradado de la barra de herramientas
 </summary>
	<value>System.Drawing.Color</value>
	<returns>System.Drawing.Color</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.cBarraHerramientas.color_final">
	<summary>
 Color final del degradado de la barra de herramientas
 </summary>
	<value>System.Drawing.Color</value>
	<returns>System.Drawing.Color</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.cFormBase.DibujarDegHorizontal">
	<summary>
 Propiedad que indica que el eje del degradado siempre sea 0º
 </summary>
	<value>True o False</value>
	<returns>True o False</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.cFormBase.ColorInicial">
	<summary>
 Color inicial del degradado, en caso de que sea horizontal, sera el color del lado izquierdo de la pantalla
 </summary>
	<value>System.Drawing.Color</value>
	<returns>System.Drawing.Color</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.cFormBase.ColorFinal">
	<summary>
 Color final del degradado, en caso de que sea horizontal, sera el color del lado derecho de la pantalla
 </summary>
	<value>System.Drawing.Color</value>
	<returns>System.Drawing.Color</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.cFormBase.AnguloDegradado">
	<summary>
 En caso de que no se marque "DibujarDegHorizontal" a true, será el ángulo de inclinación del eje de degradado, respecto a la horizontal del formulario y el sentido positivo en en de las agujas del reloj
 </summary>
	<value>Single</value>
	<returns>Single</returns>
	<remarks>Recuerde, si DibujarDegHorizontal vale true, no se tendrá en cuenta este parámetro</remarks>
</member><member name="P:CTCBASE.cFormBase.transp_perder_foco">
	<summary>
 Transparencia del formaulario al perder el foco. Si el formulario pierde el foco, se hace transparente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:CTCBASE.cFormBase.dibujarFondo(System.Drawing.Graphics@)">
	<summary>
 Funcion que permite dibujar un degradado que dependiendo de la propiedad DibujarDegHorizontal será degradado horizontal
 o degradado vertical.    '''
 </summary>
	<example>
 Public Function Refrescar(g as Graphics) 
     Me.DibujarFondo(g)
 end func
 </example>
	<remarks>El parametro AnguloDegradado sirve para indicar la inclinación del eje de degradado, este valor se mide en grados.</remarks>
	<param name="g"> Variable que contiene los gráficos donde queremos dibujar el degradado</param>    ''' 

</member><member name="T:CTCBASE.cFormBase">
	<summary>
 Clase que proporciona la funcionalidad base de un formulario con degradado
 <seealso cref="T:System.Windows.Forms.Form"></seealso>
	</summary>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.xMax">
	<summary>
 Valor de la ordenada máxima
 </summary>
	<value>Double</value>
	<returns>Double</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.xMin">
	<summary>
 Valor de la ordenada mínima
 </summary>
	<value>Double</value>
	<returns>Double</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.yMax">
	<summary>
 Valor de la abcisa máxima
 </summary>
	<value>Double</value>
	<returns>Double</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.yMin">
	<summary>
 Valor de la abcisa mínima
 </summary>
	<value>Double</value>
	<returns>Double</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.ResolucionX">
	<summary>
 Resolucion en Puntos del calculo de la grafica
 </summary>
	<value>Double</value>
	<returns>Double</returns>
	<remarks>Nota: Cuanto más pequeño sea este valor, mas lento será el proceso</remarks>
</member><member name="P:CTCBASE.baseChart.FuncionesDibujar">
	<summary>
 Delegado de la forma f(x) as PointF , para insertar una funcion de R-&gt;R
 </summary>
	<value>Delegado</value>
	<returns>Delegado</returns>
	<remarks>Nota: se ha de controlar las excepciones desde esta funcion, dado que desde aqui podremos ver que puntos son conflictivos</remarks>
</member><member name="P:CTCBASE.baseChart.PuntosDibujar">
	<summary>
 Obtiene o Establece los puntos a dibujar (independientemente de cualquier funcion)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.ErrorMedidaX">
	<summary>
 Obtiene o establece el error de medida de cada punto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.InterpolarPuntos">
	<summary>
 Obtiene o establece si se ha de interpolar todos los puntos para crear la función que pasa por todos ellos
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.CalcularRegresion">
	<summary>
 Obtiene o establece si se ha de calcular la recta de regresión de todos los puntos, además de dibujar los errores de cada uno de ellos
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.tamano_division_x">
	<summary>
 Tamaño de la división más pequeña del eje de ordenadas
 </summary>
	<value>double</value>
	<returns>Double</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.tamano_division_y">
	<summary>
 Tamaño de la división más pequeña del eje de abcisas
 </summary>
	<value>double</value>
	<returns>Double</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.ColorEjeX">
	<summary>
 Color del eje de ordenadas
 </summary>
	<value>System.Drawing.Color</value>
	<returns>System.Drawing.Color</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.ColorEjeY">
	<summary>
 Color del eje de abcisas
 </summary>
	<value>System.Drawing.Color</value>
	<returns>System.Drawing.Color</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.ColoresFunciones">
	<summary>
 Color de la curva de la funcion
 </summary>
	<value>System.Drawing.Color</value>
	<returns>System.Drawing.Color</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.ColorFuncionInterpolada">
	<summary>
 Obtiene o establece el color de la función obtenida al interpolar los puntos indicados
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.ColorFuncionRegresion">
	<summary>
 Obtiene o establece el color de la recta de regresión calculada con los puntos indicados
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.ColorAsintotaX">
	<summary>
 Color de la asintota horizontal si existe
 </summary>
	<value>System.Drawing.Color</value>
	<returns>System.Drawing.Color</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.baseChart.ColorAsintotaY">
	<summary>
 Color de la asintota vertical si existe
 </summary>
	<value>System.Drawing.Color</value>
	<returns>System.Drawing.Color</returns>
	<remarks></remarks>
</member><member name="M:CTCBASE.baseChart.ObtenCentro">
	<summary>
 Funcion que obtiene las coordenadas del centro (para la transformada x''=xb+x' e y''=yb+y')
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:CTCBASE.baseChart.ObtenVectorDirector">
	<summary>
 Obtiene el vector unitario para completar las transofrmadas
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:CTCBASE.baseChart.DibujaEjex(System.Drawing.Graphics@,System.Drawing.Pen,System.Boolean)">
	<summary>
 Dibuja el eje X de la gráfica
 </summary>
	<param name="g">graphics del objeto a dibujar</param>
	<param name="p">Lapiz para dibujar</param>
	<param name="division">Si hay division o no</param>
	<remarks></remarks>
</member><member name="M:CTCBASE.baseChart.DibujaEjey(System.Drawing.Graphics@,System.Drawing.Pen,System.Boolean)">
	<summary>
 Dibuja el eje Y de la gráfica
 </summary>
	<param name="g">graphics del objeto a dibujar</param>
	<param name="p">Lapiz para dibujar</param>
	<param name="division">Si hay division o no</param>
	<remarks></remarks>
</member><member name="M:CTCBASE.baseChart.Punto(System.Double,System.Double)">
	<summary>
 Obtiene el punto referido a la base del objeto
 </summary>
	<param name="x"></param>
	<param name="y"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:CTCBASE.baseChart.DibujaFuncion(System.Drawing.Graphics@,CTCBASE.baseChart.funcion,System.Drawing.Color)">
	<summary>
 Dibuja una función pasada como parametro
 </summary>
	<param name="g">graphics de dibujo</param>
	<param name="f">[Delegado] funcion a dibujar</param>
	<param name="c">Color de la grafica</param>
	<remarks></remarks>
</member><member name="M:CTCBASE.baseChart.GuardarFichero(System.String)">
	<summary>
 Guarda el contenido de la gráfica en un fichero BMP
 </summary>
	<param name="ruta">Nombre fichero</param>
	<remarks></remarks>
</member><member name="T:CTCBASE.baseChart">
	<summary>
 Clase para dibujar funciones matemáticas o funciones definidas a trozos
 </summary>
	<remarks></remarks>
</member><member name="P:CTCBASE.cRitchTextBox.ActivarFormularioBusquedaF2">
	<summary>
 Propiedad para activar el menú de busqueda pulsando F2
 </summary>
	<value>Boolean</value>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.cRitchTextBox.ActivarMenuFormatoF3">
	<summary>
 Propiedad para activar el menú de formato pulsando F3
 </summary>
	<value>Boolean</value>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.cRitchTextBox.TextoBase64">
	<summary>
 Propiedad para poder almacenar y rescatar el texto RTF desde una base de datos, sin modificar ninguno de sus atributos
 </summary>
	<value>String</value>
	<returns>String</returns>
	<remarks></remarks>
</member><member name="M:CTCBASE.cRitchTextBox.InsertarImagen(System.Drawing.Image)">
	<summary>
 Inserta una imagen desde una variable del tipo System.Drawing.Image en el punto donde se encuentra el cursor
 </summary>
	<param name="imag">System.Drawing.Image</param>
	<remarks></remarks>
</member><member name="M:CTCBASE.cRitchTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
	<summary>
 Metodo sobreescrito para ofrecer la funcionalidad de busqueda al pulsar la tecla "F2"
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:CTCBASE.My.Resources.Resources.ResourceManager">
	<summary>
  Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
</summary>
</member><member name="P:CTCBASE.My.Resources.Resources.Culture">
	<summary>
  Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
  búsquedas de recursos mediante esta clase de recurso con establecimiento inflexible de tipos.
</summary>
</member><member name="T:CTCBASE.My.Resources.Resources">
	<summary>
  Clase de recurso con establecimiento inflexible de tipos, para buscar cadenas traducidas, etc.
</summary>
</member><member name="P:CTCBASE.cNumericBoxBase.Decimales">
	<summary>
 Variable que especifica el número de decimales que contendrá el número en cuestion (0 para ser un numero entero)
 </summary>
	<value>Nº de decimales</value>
	<returns>Nº de decimales</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.ImagenItem.DibujarFondo">
	<summary>
 Dice si debe de dibujar un fondo degradado o dejar el fondo por defecto del control
 </summary>
	<value>Boolean</value>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.ImagenItem.BGColorInicial">
	<summary>
 Indica el color inicial para comenzar el degradado
 </summary>
	<value>System.Drawing.Color</value>
	<returns>System.Drawing.Color</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.ImagenItem.BGColorFinal">
	<summary>
 Indica el color final para terminar el degradado
 </summary>
	<value>System.Drawing.Color</value>
	<returns>System.Drawing.Color</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.ImagenItem.IndiceImagen">
	<summary>
 Indica el indice de la imagen contenido en el ImageList del control
 </summary>
	<value>Int32</value>
	<returns>Int32</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.ImagenItem.Clave">
	<summary>
 Obtiene o establece la clave del Item
 </summary>
	<value>Object</value>
	<returns>Object</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.ImagenItem.Valor">
	<summary>
 Obtiene o establece el valor principal del item
 </summary>
	<value>Object</value>
	<returns>Object</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.ImagenItem.DobleLinea">
	<summary>
 Obtiene o establece si se va a dibujar una linea complementaria
 </summary>
	<value>Boolean</value>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="P:CTCBASE.ImagenItem.ValorDobleLinea">
	<summary>
 Obtiene o establece el valor de la doble linea
 </summary>
	<value>Object</value>
	<returns>Object</returns>
	<remarks></remarks>
</member><member name="M:CTCBASE.ImagenItem.#ctor(System.Object)">
	<summary>
 Establece un ImageItem solo con el valor
 </summary>
	<param name="V">Object</param>
	<remarks></remarks>
</member><member name="M:CTCBASE.ImagenItem.#ctor(System.Object,System.Object)">
	<summary>
 Establece un ImageItem con el para clave valor
 </summary>
	<param name="Key">Object</param>
	<param name="Value">Object</param>
	<remarks></remarks>
</member><member name="M:CTCBASE.ImagenItem.#ctor(System.Object,System.Object,System.Int32)">
	<summary>
 Establece un ImageItem con Clave, valor y el índice de la imagen en del ImageList del control
 </summary>
	<param name="Key">Object</param>
	<param name="Value">Object</param>
	<param name="ImagenIndex">Int32</param>
	<remarks></remarks>
</member><member name="M:CTCBASE.ImagenItem.#ctor(System.Object,System.Int32)">
	<summary>
 Establece un ImageItem con solo valor y el índice de la imagen del imageList del control
 </summary>
	<param name="Value">Object</param>
	<param name="ImagenIndex">Int32</param>
	<remarks></remarks>
</member><member name="M:CTCBASE.ImagenItem.#ctor(System.Object,System.Object,System.Object,System.Int32)">
	<summary>
 Establece un ImageItem con clave, valor principal, valor secundario y indice de imagen del ImageList del control
 </summary>
	<param name="key">Object</param>
	<param name="value">Object</param>
	<param name="value2">Object</param>
	<param name="ImagenIndex">Int32</param>
	<remarks></remarks>
</member><member name="P:CTCBASE.frmEsperaReloj.TextoMostrar">
	<summary>
 Texto que se mostrará en medio del control
 </summary>
	<value>String</value>
	<returns>String</returns>
	<remarks></remarks>
</member>
</members>
</doc>